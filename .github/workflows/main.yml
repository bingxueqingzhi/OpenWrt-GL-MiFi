name: Build Firmware

on: [push]

jobs:
  build:
    runs-on: ubuntu-16.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization Environment
      run: |
        sudo apt-get update
        sudo apt-get install build-essential asciidoc binutils \
        bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip \
        zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs \
        git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo \
        libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf \
        automake libtool autopoint device-tree-compiler libpam0g-dev \
        libidn2-0-dev attr libpcre2-dev libexpat1-dev \
        libssh2-1-dev libgnutls-dev libldap2-dev libcap-dev liblzma-dev \
        libjansson-dev libpng-dev libupnp-dev \
        libgd-dev bc lm-sensors libtirpc-dev \
        libavahi-client-dev libarchive-dev mkisofs -y
        

    - name: Clone OpenWrt Project
      env: 
        REPO_URL: https://github.com/openwrt/openwrt.git
        REPO_BRANCH: master
      run: |
        git clone -b ${REPO_BRANCH} ${REPO_URL} ./openwrt

    - name: Add extend feeds
      run: |
        [ -f ./feeds.conf.default ] && cat ./feeds.conf.default >> ./openwrt/feeds.conf.default

    - name: Update feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Load custom configuration
      working-directory: ./openwrt
      run: |
        [ -d ../files ] && mv ../files ./files
        cp -fr ../config ./.config
        make defconfig

    - name: Custom Settings
      env: 
        FILE_NAME: "diy.sh"
      working-directory: ./openwrt
      run: |
        [ -f ../${FILE_NAME} ] && (
          cp -fr ../${FILE_NAME} ./${FILE_NAME}
          chmod +x ./${FILE_NAME}
          ./${FILE_NAME}
        )

    - name: Download package source code
      working-directory: ./openwrt
      run: |
        make download -j$(nproc) V=s

    - name: Multi-thread compile
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: Single-thread compile
      if: failure()
      working-directory: ./openwrt
      run: |
        make -j1 V=s

    - name: Organize files
      if: always()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"

    - name: Upload firmware
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt-GL-MiFi
        path: ${{ env.FIRMWARE }}